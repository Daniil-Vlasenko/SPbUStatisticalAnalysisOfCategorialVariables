---
title: "task2"
output: html_document
date: "2023-03-03"
---


## Энтропия.
```{r}
data <- matrix(c(6, 16, 12, 11), ncol=2)
data
```

```{r}
entropy <- function(v) {
  sum.v <- sum(v)
  p.v <- v / sum.v
  entropy.v <- sum(p.v * log2(1 / p.v))
  return(entropy.v)
}

H.x <- entropy(apply(data, 1, sum))
H.y <- entropy(apply(data, 2, sum))
paste("H.x:", H.x)
paste("H.y:", H.y)

I <- H.x + H.y - entropy(as.numeric(data))
paste("I:", I)

J.x <- I / H.x * 100
J.y <- I / H.y * 100
paste("J.x:", J.x)
paste("J.y:", J.y)

J <- 2 * I / (H.x + H.y) * 100
paste("J:", J)
```

## Кластеризация.
```{r, message=FALSE}
library(dplyr)
library(readxl)
```

```{r}
df<-read.csv('data_big.csv')
# df
df1<-df[,c('depressed.mood.1','craving.to.alcohol.1','anxiety.1','HR.1')]
head(df1)
```

Используем имеющуюся в R функцию кластеризации.
```{r}
library("tree")
treeA <- tree(depressed.mood.1 ~., df1)
plot(treeA); text(treeA, col=4) # почему работает через ";", а на разных строках не работает?
```

Построим таблицу классификации для данного метода:
```{r, warning=FALSE}
library(dplyr)

column.1 <- c(df %>% filter(depressed.mood.1 == 1 & craving.to.alcohol.1 < 1.5 & anxiety.1 > 0.5 & HR.1 > 66.5) %>% nrow(),
              df %>% filter(depressed.mood.1 == 2 & craving.to.alcohol.1 < 1.5 & anxiety.1 > 0.5 & HR.1 > 66.5) %>% nrow())

column.1.4 <- c(df %>% 
                filter(depressed.mood.1 == 1 & 
                         (craving.to.alcohol.1 > 1.5 | craving.to.alcohol.1 < 1.5 & 
                            (anxiety.1 < 0.5 | anxiety.1 > 0.5 & HR.1 < 66.5))) %>% nrow(),
                df %>% 
                filter(depressed.mood.1 == 2 & 
                         (craving.to.alcohol.1 > 1.5 | craving.to.alcohol.1 < 1.5 & 
                            (anxiety.1 < 0.5 | anxiety.1 > 0.5 & HR.1 < 66.5))) %>% nrow())


class.df.1 <- data_frame(depressed.mood.1 = 1:2, column.1,  column.1.4)
class.df.1
```

```{r}
# Это я написал вычисление информационного разнообразия и инф. выгрыша от объединения.
information.1 <- function(v) {
  unique.v <- unique(v)
  information.v <- length(v) * log(length(v))
  for (i in unique.v) {
    information.v = information.v - length(v[v == i]) * log(length(v[v == i]))
  }
  return(information.v)
}

information.2 <- function(df) {
  information.df <- 0
  for(i in 1:ncol(df)) {
    information.df <- information.df + information.1(df[, i])
  }
  return(information.df)
}

information.gain.v <- function(v1, v2) {
  information.gain.v1.v2 <- information.1(c(v1, v2)) - information.1(v1) - information.1(v2)
  return(information.gain.v1.v2)
}

information.gain.df <- function(df1, df2) {
  information.gain.df1.df2 <- information.2(rbind(df1, df2)) - information.2(df1) - information.2(df2)
  return(information.gain.df1.df2)
}

information.gain.v(c(1, 1), c(2, 2))
information.gain.v(c(1, 2), c(1, 2))

```

```{r}
##  Тут я решил не переписывать метод классификации и использовал код лекции.
I_inf <-function(X) {
  nn <-table(X); n <-sum(nn); n * log(n)- sum(nn * log(nn))
  }

D_inf <-function(X, Y) {
  I_inf(c(X, Y))- I_inf(X)- I_inf(Y)
}

GinyDA. <- function(y, class, k1, k2) { 
  # y независимая переменная, class,
  # k1,k2 минимальные объемы подвыборок
  ss <- sort(unique(y)); ss
  ss. <- (ss[-1] + ss[-length(ss)])/2;
  # определяем середины интервалов между наблюдениями
  l <- lapply(ss., function(x)
  { L1 <- class[y <= x]; L2 <- class[y > x];
  if(length(L1) > k1&length(L2) > k2)
  res <- c(D_inf(L1, L2), x)else res <- c(NA, NA) })
  # считаем информационные выигрыши при размежевании данных
  data.frame(na.omit(do.call("rbind", l)))
}
```

```{r}
GinyDA.(df1$craving.to.alcohol.1, df1$depressed.mood.1, 2, 2)
GinyDA.(df1$anxiety.1, df1$depressed.mood.1, 2, 2)
GinyDA.(df1$HR.1, df1$depressed.mood.1, 2, 2)
df2 <- df1 %>% filter(anxiety.1 < 1.5); df2
df3 <- df1 %>% filter(anxiety.1 > 1.5); df3
```
```{r}
GinyDA.(df2$depressed.mood.1, df2$craving.to.alcohol.1, 2, 2)
GinyDA.(df2$anxiety.1, df2$craving.to.alcohol.1, 2, 2)
GinyDA.(df2$HR.1, df2$craving.to.alcohol.1, 2, 2)
df4 <- df2 %>% filter(HR.1 < 64.5); df4
df5 <- df2 %>% filter(HR.1 > 64.5); df5
```

```{r}
column.1 <- c(df %>% filter(depressed.mood.1 == 1 & anxiety.1 < 1.5) %>% nrow(),
              df %>% filter(depressed.mood.1 == 2 & anxiety.1 < 1.5) %>% nrow())
column.2 <- c(df %>% filter(depressed.mood.1 == 1 & anxiety.1 > 1.5) %>% nrow(),
              df %>% filter(depressed.mood.1 == 2 & anxiety.1 > 1.5) %>% nrow())

class.df.2 <- data_frame(depressed.mood.1 = 1:2, column.1,  column.2)

class.df.1
class.df.2
df %>% nrow()
```
















